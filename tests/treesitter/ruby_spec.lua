local util = require("tests.test_util")

describe("treesitter ruby", function()
  it("parses all symbols correctly", function()
    util.test_file_symbols("treesitter", "./tests/treesitter/ruby_test.rb", {
      {
        kind = "Module",
        name = "Mod",
        level = 0,
        lnum = 1,
        col = 0,
        end_lnum = 13,
        end_col = 3,
        children = {
          {
            kind = "Class",
            name = "Cl_1",
            level = 1,
            lnum = 2,
            col = 2,
            end_lnum = 4,
            end_col = 5,
            children = {
              {
                kind = "Method",
                name = "meth_1",
                level = 2,
                lnum = 3,
                col = 4,
                end_lnum = 3,
                end_col = 20,
              },
            },
          },
          {
            kind = "Method",
            name = "meth_2",
            level = 1,
            lnum = 6,
            col = 2,
            end_lnum = 6,
            end_col = 18,
          },
          {
            kind = "Method",
            name = "name=",
            level = 1,
            lnum = 8,
            col = 2,
            end_lnum = 8,
            end_col = 22,
          },
          {
            kind = "Method",
            name = "==",
            level = 1,
            lnum = 10,
            col = 2,
            end_lnum = 10,
            end_col = 19,
          },
          {
            kind = "Method",
            name = "oneline",
            level = 1,
            lnum = 12,
            col = 2,
            end_lnum = 12,
            end_col = 21,
          },
        },
      },
      {
        kind = "Method",
        name = "describe UnitTest",
        level = 0,
        lnum = 15,
        col = 0,
        end_lnum = 22,
        end_col = 3,
        children = {
          {
            kind = "Method",
            name = "before :all",
            level = 1,
            lnum = 16,
            col = 2,
            end_lnum = 17,
            end_col = 5,
          },
          {
            kind = "Method",
            name = "after",
            level = 1,
            lnum = 18,
            col = 2,
            end_lnum = 19,
            end_col = 5,
          },
          {
            kind = "Method",
            name = "it should describe the test",
            level = 1,
            lnum = 20,
            col = 2,
            end_lnum = 21,
            end_col = 5,
          },
        },
      },
      {
        kind = "Method",
        name = "namespace rake_namespace",
        level = 0,
        lnum = 24,
        col = 0,
        end_lnum = 30,
        end_col = 3,
        children = {
          {
            kind = "Method",
            name = "task :simple_task",
            level = 1,
            lnum = 25,
            col = 2,
            end_lnum = 25,
            end_col = 29,
          },
          {
            kind = "Method",
            name = "task inline_task",
            level = 1,
            lnum = 26,
            col = 2,
            end_lnum = 26,
            end_col = 43,
          },
          {
            kind = "Method",
            name = "task rake_task",
            level = 1,
            lnum = 27,
            col = 2,
            end_lnum = 27,
            end_col = 37,
          },
          {
            kind = "Method",
            name = "multitask parallel_prereqs",
            level = 1,
            lnum = 28,
            col = 2,
            end_lnum = 28,
            end_col = 58,
          },
          {
            kind = "Method",
            name = "file create_file",
            level = 1,
            lnum = 29,
            col = 2,
            end_lnum = 29,
            end_col = 30,
          },
        },
      },
      {
        kind = "Module",
        name = "Long::Mod::Name",
        level = 0,
        lnum = 33,
        col = 0,
        end_lnum = 36,
        end_col = 3,
        children = {
          {
            kind = "Class",
            name = "Long::Class::Name",
            level = 1,
            lnum = 34,
            col = 2,
            end_lnum = 35,
            end_col = 5,
          },
        },
      },
      {
        kind = "Method",
        name = "context Shoulda Context",
        level = 0,
        lnum = 38,
        col = 0,
        end_lnum = 48,
        end_col = 3,
        children = {
          {
            kind = "Method",
            name = "setup",
            level = 1,
            lnum = 39,
            col = 2,
            end_lnum = 40,
            end_col = 5,
          },
          {
            kind = "Method",
            name = "teardown",
            level = 1,
            lnum = 41,
            col = 2,
            end_lnum = 42,
            end_col = 5,
          },
          {
            kind = "Method",
            name = "should test something",
            level = 1,
            lnum = 43,
            col = 2,
            end_lnum = 44,
            end_col = 5,
          },
          {
            kind = "Method",
            name = "should_eventually actually work",
            level = 1,
            lnum = 45,
            col = 2,
            end_lnum = 46,
            end_col = 5,
          },
          {
            kind = "Method",
            name = "should_not validate_presence_of(:title)",
            level = 1,
            lnum = 47,
            col = 2,
            end_lnum = 47,
            end_col = 41,
          },
        },
      },
    })

    -- Singleton methods test
    util.test_file_symbols("treesitter", "./tests/treesitter/ruby_test_singleton.rb", {
      {
        kind = "Class",
        name = "Klassy",
        level = 0,
        lnum = 1,
        col = 0,
        end_lnum = 11,
        end_col = 3,
        children = {
          {
            kind = "Class",
            name = "self",
            level = 1,
            lnum = 2,
            col = 2,
            end_lnum = 6,
            end_col = 5,
            children = {
              {
                kind = "Method",
                name = "==",
                level = 2,
                lnum = 3,
                col = 4,
                end_lnum = 3,
                end_col = 22,
              },
              {
                kind = "Method",
                name = "regular",
                level = 2,
                lnum = 4,
                col = 4,
                end_lnum = 4,
                end_col = 20,
              },
              {
                kind = "Method",
                name = "endless",
                level = 2,
                lnum = 5,
                col = 4,
                end_lnum = 5,
                end_col = 21,
              },
            },
          },
          {
            kind = "Method",
            name = "self.<=>",
            level = 1,
            lnum = 8,
            col = 2,
            end_lnum = 8,
            end_col = 26,
          },
          {
            kind = "Method",
            name = "self.regularish",
            level = 1,
            lnum = 9,
            col = 2,
            end_lnum = 9,
            end_col = 26,
          },
          {
            kind = "Method",
            name = "self.endlessish",
            level = 1,
            lnum = 10,
            col = 2,
            end_lnum = 10,
            end_col = 27,
          },
        },
      },
      -- Explody
      {
        kind = "Method",
        name = "Explody.>",
        level = 0,
        lnum = 13,
        col = 0,
        end_lnum = 13,
        end_col = 25,
      },
      {
        kind = "Method",
        name = "Explody.regularnot",
        level = 0,
        lnum = 14,
        col = 0,
        end_lnum = 14,
        end_col = 27,
      },
      {
        kind = "Method",
        name = "Explody.endlessness",
        level = 0,
        lnum = 15,
        col = 0,
        end_lnum = 15,
        end_col = 29,
      },
      -- instance
      {
        kind = "Method",
        name = "instance.==",
        level = 0,
        lnum = 17,
        col = 0,
        end_lnum = 17,
        end_col = 27,
      },
      {
        kind = "Method",
        name = "instance.regular",
        level = 0,
        lnum = 18,
        col = 0,
        end_lnum = 18,
        end_col = 25,
      },
      {
        kind = "Method",
        name = "instance.endless",
        level = 0,
        lnum = 19,
        col = 0,
        end_lnum = 19,
        end_col = 26,
      },
      -- double colon instead of dot
      {
        kind = "Method",
        name = "youcandothistoo::==",
        level = 0,
        lnum = 21,
        col = 0,
        end_lnum = 21,
        end_col = 35,
      },
      {
        kind = "Method",
        name = "youcandothistoo::regular",
        level = 0,
        lnum = 22,
        col = 0,
        end_lnum = 22,
        end_col = 33,
      },
      {
        kind = "Method",
        name = "youcandothistoo::endless",
        level = 0,
        lnum = 23,
        col = 0,
        end_lnum = 23,
        end_col = 34,
      },
      -- value eigenclass
      {
        kind = "Class",
        name = "42",
        level = 0,
        lnum = 26,
        col = 0,
        end_lnum = 30,
        end_col = 3,
        children = {
          {
            kind = "Method",
            name = "==",
            level = 1,
            lnum = 27,
            col = 2,
            end_lnum = 27,
            end_col = 20,
          },
          {
            kind = "Method",
            name = "regular",
            level = 1,
            lnum = 28,
            col = 2,
            end_lnum = 28,
            end_col = 18,
          },
          {
            kind = "Method",
            name = "endless",
            level = 1,
            lnum = 29,
            col = 2,
            end_lnum = 29,
            end_col = 19,
          },
        },
      },
      -- string value eigenclass
      {
        kind = "Class",
        name = '"42"',
        level = 0,
        lnum = 32,
        col = 0,
        end_lnum = 36,
        end_col = 3,
        children = {
          {
            kind = "Method",
            name = "==",
            level = 1,
            lnum = 33,
            col = 2,
            end_lnum = 33,
            end_col = 20,
          },
          {
            kind = "Method",
            name = "regular",
            level = 1,
            lnum = 34,
            col = 2,
            end_lnum = 34,
            end_col = 18,
          },
          {
            kind = "Method",
            name = "endless",
            level = 1,
            lnum = 35,
            col = 2,
            end_lnum = 35,
            end_col = 19,
          },
        },
      },
      -- variable eigenclass
      {
        kind = "Class",
        name = "variable",
        level = 0,
        lnum = 38,
        col = 0,
        end_lnum = 42,
        end_col = 3,
        children = {
          {
            kind = "Method",
            name = "==",
            level = 1,
            lnum = 39,
            col = 2,
            end_lnum = 39,
            end_col = 20,
          },
          {
            kind = "Method",
            name = "regular",
            level = 1,
            lnum = 40,
            col = 2,
            end_lnum = 40,
            end_col = 18,
          },
          {
            kind = "Method",
            name = "endless",
            level = 1,
            lnum = 41,
            col = 2,
            end_lnum = 41,
            end_col = 19,
          },
        },
      },
      -- constant/class/module eigenclass
      {
        kind = "Class",
        name = "Constant",
        level = 0,
        lnum = 44,
        col = 0,
        end_lnum = 48,
        end_col = 3,
        children = {
          {
            kind = "Method",
            name = "==",
            level = 1,
            lnum = 45,
            col = 2,
            end_lnum = 45,
            end_col = 20,
          },
          {
            kind = "Method",
            name = "regular",
            level = 1,
            lnum = 46,
            col = 2,
            end_lnum = 46,
            end_col = 18,
          },
          {
            kind = "Method",
            name = "endless",
            level = 1,
            lnum = 47,
            col = 2,
            end_lnum = 47,
            end_col = 19,
          },
        },
      },
    })
  end)
end)
