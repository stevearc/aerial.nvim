return {
  bash = {
    function_definition = "Function",
  },
  c = {
    enum_specifier = "Enum",
    function_definition = "Function",
    struct_specifier = "Struct",
  },
  cpp = {
    class_specifier = "Class",
    enum_specifier = "Enum",
    function_definition = "Function",
    struct_specifier = "Struct",
  },
  c_sharp = {
    interface_declaration = "Interface",
    class_declaration = "Class",
    method_declaration = "Method",
    struct_declaration = "Struct",
    enum_declaration = "Enum",
    constructor_declaration = "Constructor",
  },
  dart = {
    class_definition = "Class",
    constructor_signature = "Constructor",
    function_signature = "Function",
    method_signature = "Method",
    enum_declaration = "Enum",
  },
  elixir = {
    call = "Function",
  },
  go = {
    function_declaration = "Function",
    method_declaration = "Method",
    struct_type = "Struct",
  },
  java = {
    class_declaration = "Class",
    enum_declaration = "Enum",
    interface_declaration = "Interface",
    method_declaration = "Method",
    field_declaration = "Field",
  },
  javascript = {
    call_expression = "Function",
    class_declaration = "Class",
    function_declaration = "Function",
    method_definition = "Method",
  },
  json = {
    object = "Class",
  },
  julia = {
    const_statement = "Constant",
    abstract_definition = "Interface",
    call_expression = "Function",
    function_definition = "Function",
    macro_definition = "Function",
    module_definition = "Module",
    struct_definition = "Class",
  },
  lua = {
    function_declaration = "Function",
    function_definition = "Function",
  },
  make = {
    rule = "Interface",
  },
  markdown = {
    atx_heading = "Interface",
  },
  norg = {
    heading1 = "Interface",
    heading2 = "Interface",
    heading3 = "Interface",
    heading4 = "Interface",
    heading5 = "Interface",
    heading6 = "Interface",
  },
  org = {
    section = "Interface",
  },
  php = {
    anonymous_function_creation_expression = "Function",
    class_declaration = "Class",
    function_definition = "Function",
    interface_declaration = "Interface",
    method_declaration = "Method",
    trait_declaration = "Class",
  },
  python = {
    function_definition = "Function",
    class_definition = "Class",
  },
  r = {
    left_assignment = "Function",
    function_definition = "Function",
    comment = "Interface",
  },
  rst = {
    section = "Interface",
  },
  ruby = {
    call = "Method",
    class = "Class",
    method = "Method",
    module = "Module",
    singleton_method = "Method",
  },
  rust = {
    enum_item = "Enum",
    function_item = "Function",
    function_signature_item = "Function",
    impl_item = "Class",
    mod_item = "Module",
    struct_item = "Struct",
    trait_item = "Interface",
  },
  scala = {
    trait_definition = "Interface",
    object_definition = "Class",
    class_definition = "Class",
    function_declaration = "Function",
    function_definition = "Function",
  },
  teal = {
    function_statement = "Function",
    anon_function = "Function",
  },
  typescript = {
    class_declaration = "Class",
    function_signature = "Function",
    function_declaration = "Function",
    interface_declaration = "Interface",
    method_definition = "Method",
    type_alias_declaration = "Type",
    variable_declarator = "Variable",
  },
  tsx = {
    class_declaration = "Class",
    function_signature = "Function",
    function_declaration = "Function",
    interface_declaration = "Interface",
    method_definition = "Method",
    type_alias_declaration = "Type",
    variable_declarator = "Variable",
  },
  vim = {
    function_definition = "Function",
  },
  yaml = {
    block_mapping = "Class",
    block_sequence = "Enum",
  },
}
